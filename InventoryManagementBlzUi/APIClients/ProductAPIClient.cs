// Code generated by DevUp technologies, 02/08/2024 14:39:06
using System.Diagnostics;
using System.Net.Http;
using System.Net.Http.Json;
using System.Threading.Tasks;
using InventoryManagementBlzUi.Models;

namespace InventoryManagementBlzUi.APIClient
{
	public class ProductAPIClient
    {
        private HttpClient _httpClient;
        public ProductAPIClient(HttpClient httpClient)
        {
            _httpClient = httpClient;
        }

        public async Task<List<ProductModel>> GetAll() => await _httpClient.GetFromJsonAsync<List<ProductModel>>("api/Product/GetAll/");
        public async Task<int> GetTotal() => await _httpClient.GetFromJsonAsync<int>("api/Product/GetTotal/");
        public async Task<List<ProductModel>> GetByFilter(ProductFilterModel filter) => (await _httpClient.PostAsJsonAsync("api/Product/GetByFilter/", filter)).Content?.ReadFromJsonAsync<List<ProductModel>>().Result;
        public async Task<int> GetByFilterTotal(ProductFilterModel filter) =>           (await _httpClient.PostAsJsonAsync("api/Product/GetByFilterTotal/", filter)).Content.ReadFromJsonAsync<int>().Result;
        public async Task<ProductModel> GetById(Int64 id)=> await _httpClient.GetFromJsonAsync<ProductModel>("api/Product/GetById?id=" + id);
        public async Task<bool> Delete(Int64 id) => (await _httpClient.DeleteAsync("api/Product/Delete?id=" + id)).IsSuccessStatusCode;
		
		public async Task<bool> CreateUpdate(ProductModel dataItem)
        {          
			HttpResponseMessage response;
			if (dataItem.Id > 0) 
				response = await _httpClient.PutAsJsonAsync("api/Product/Update?id=" + dataItem.Id, dataItem);
			else
				response = await _httpClient.PostAsJsonAsync("api/Product/Create/", dataItem);
			
			return response.IsSuccessStatusCode;
        }
		
		public async Task<long> CreateGetId(ProductModel dataItem)
        {
            long newRecordId = -1;
			var response = _httpClient.PostAsJsonAsync("api/Product/CreateGetId/", dataItem).Result;
			string returnValue = await response.Content.ReadAsStringAsync();
			if (response.IsSuccessStatusCode)
				long.TryParse(returnValue, out newRecordId);
			
            return newRecordId;
        }
    }
}

